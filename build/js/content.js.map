{"version":3,"file":"js/content.js","mappings":"YAGA,SAASA,EAAeC,GACpB,IAAIC,EAAUC,OAAOC,aAAaC,QAAQ,aAE1C,GAAwB,IAApBC,KAAKC,YAAmBD,KAAKE,WAAWC,SAASP,GAWjD,OARIQ,OAAOC,eAAeL,KAAM,eAAgB,CAACM,UAAU,IACvDF,OAAOC,eAAeL,KAAM,SAAU,CAACM,UAAU,IAGjDN,KAAKO,aAAa,MAClBP,KAAKQ,OAAO,IAEhBC,QAAQC,IAAI,iBAAiBV,OACtB,CAEd,CAED,IAAoBW,EApBpBF,QAAQC,IAAIb,OAAO,YAAYA,OAAOC,aAAaC,QAAQ,cA+C3Da,eAAeC,UAAUC,MA3BLH,EA2BuBC,eAAeC,UAAUC,KAzBzD,SAASC,EAAQC,EAAKC,GAOzB,OALAjB,KAAKkB,cAAgBH,EACrBf,KAAKE,WAAac,EAClBP,QAAQC,IAAI,gBAAgBM,EAAID,GAChCf,KAAKmB,iBAAiB,mBAAoBzB,GAC1CM,KAAKmB,iBAAiB,UAASC,GAAGX,QAAQC,IAAIU,KACvCT,EAAkBU,MAAMrB,KAAMsB,UACxC,GAkBLV,eAAeC,UAAUU,KAdzB,SAAoBZ,GAChB,OAAO,SAASa,GAGZ,OADAxB,KAAKyB,YAAcD,EACZb,EAAkBU,MAAMrB,KAAMsB,UACxC,CACJ,CAQ+BI,CAAWd,eAAeC,UAAUU,K","sources":["webpack://react-cli/./src/content/index.js"],"sourcesContent":["\nconsole.log(window,'in script',window.localStorage.getItem('urlFilter'))\n\nfunction modifyResponse(response) {\n    var urlFilter=window.localStorage.getItem('urlFilter');\n    var original_response, modified_response;\n    if (this.readyState === 4&& this.requestURL.includes(urlFilter)) {\n        // 使用在 openBypass 中保存的相关参数判断是否需要修改\n        if (true||this.requestUrl  && this.requestMethod ) {\n            Object.defineProperty(this, \"responseText\", {writable: true});\n            Object.defineProperty(this, \"status\", {writable: true});\n            // 根据 sendBypass 中保存的数据修改响应内容\n            // '{\"rules\":[{\"proxy_url\":\"login\",\"target_url\":\"login\",\"mockJson\":{\"message\":\"success\",\"data\":{\"id\":1,\"type\":1}}}]}';\n            this.responseText='123';\n            this.status=200\n        }\n        console.log('check response',this)\n        return true;\n    }\n}\n\nfunction openBypass(original_function) {\n\n    return function(method, url, async) {\n        // 保存请求相关参数\n        this.requestMethod = method;\n        this.requestURL = url;\n        console.log('check request',url,method);\n        this.addEventListener(\"readystatechange\", modifyResponse);\n        this.addEventListener('onload',e=>console.log(e))\n        return original_function.apply(this, arguments);\n    };\n\n}\n\nfunction sendBypass(original_function) {\n    return function(data) {\n        // 保存请求相关参数\n        this.requestData = data;\n        return original_function.apply(this, arguments);\n    };\n}\nfunction onloadBypass(original_function){\n    return function(data){\n        return original_function.apply(this, arguments);\n    }\n}\n\nXMLHttpRequest.prototype.open = openBypass(XMLHttpRequest.prototype.open);\nXMLHttpRequest.prototype.send = sendBypass(XMLHttpRequest.prototype.send);\n// XMLHttpRequest.prototype.onload="],"names":["modifyResponse","response","urlFilter","window","localStorage","getItem","this","readyState","requestURL","includes","Object","defineProperty","writable","responseText","status","console","log","original_function","XMLHttpRequest","prototype","open","method","url","async","requestMethod","addEventListener","e","apply","arguments","send","data","requestData","sendBypass"],"sourceRoot":""}